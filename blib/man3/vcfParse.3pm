.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "vcfParse 3"
.TH vcfParse 3 "2017-09-15" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
vcfParse \- Easy parsing of VCF files
.SH "VERSION"
.IX Header "VERSION"
Version 0.03
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& use vcfParse;
\&
\& my $vcf_file = \*(Aqin_file.vcf\*(Aq;
\& my ( $data, $info_fields, $filtered_vars ) = vcfParse::parse($vcf_file);
\&
\& for ( sort { @{ $data\->{$a}}[0] cmp @{ $data\->{$b}}[0] or
\&      @{ $data\->{$a}}[1] <=> @{ $data\->{$b}}[1]
\&    }  keys %{ $data } ){
\&    my ( $chrom, $pos, $id, $ref, $alt, $quality_score, $filt, $info_block, $format_block, $tumour_info_block, $normal_info_block, $filters, $samples ) = @{ $data\->{$_} };
\&
\&    my (@headers)      = @{ $info_fields\->{$_}[0] }; # The header fileds from VCF (starting with \*(Aq#\*(Aq)
\&    my (@format)                   = @{ $info_fields\->{$_}[1] }; # The format field from VCF
\&    my (%format_long)  = @{ $info_fields\->{$_}[2] }; # The description of the FORMAT field (corresponding to ##FORMAT=<ID=[field] in header)
\&    my (%info_long)    = @{ $info_fields\->{$_}[3] }; # The description of the INFO field (corresponding to ##INFO=<ID=[field] in header)
\&    my (@tumour_parts) = @{ $info_fields\->{$_}[4] }; # The tumour values (for each FORMAT feild)
\&    my (@normal_parts) = @{ $info_fields\->{$_}[5] }; # The normal values (for each FORMAT feild)
\&    my (%information)  = @{ $info_fields\->{$_}[6] }; # The format field from VCF
\&    my (%sample_info)  = @{ $info_fields\->{$_}[7] }; # Per\-sample info lookup (e.g. $sample_info{$_}{\*(Aq[sample_name]\*(Aq}{\*(Aq[FORMAT_field]\*(Aq})
\&
\&    if ( $sample_info{$_}{\*(AqTUMOR\*(Aq}{\*(AqAF\*(Aq} ){
\&      print "Allele frequency = "$sample_info{$_}{\*(AqTUMOR\*(Aq}{\*(AqAF\*(Aq}\en";
\&    }
\&    # Do more things
\&  }
.Ve
.SH "SUBROUTINES/METHODS"
.IX Header "SUBROUTINES/METHODS"
.SS "\fIparse()\fP"
.IX Subsection "parse()"
.SH "AUTHOR"
.IX Header "AUTHOR"
Nick Riddiford, \f(CW\*(C`nick.riddiford@curie.fr\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to \f(CW\*(C`nick.riddiford@curie.fr\*(C'\fR,
or via the GitHub issues page <https://github.com/nriddiford/vcfParse/issues>
.SH "SUPPORT"
.IX Header "SUPPORT"
.IP "Github: <https://github.com/nriddiford/vcfParse/blob/master/README.md>" 1
.IX Item "Github: <https://github.com/nriddiford/vcfParse/blob/master/README.md>"
.PD 0
.IP "perdoc: 'perldoc vcfParse'" 1
.IX Item "perdoc: 'perldoc vcfParse'"
.PD
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
\&\s-1MIT\s0 License
.PP
Copyright (c) 2017 Nick Riddiford
.PP
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the \*(L"Software\*(R"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
.PP
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
.PP
\&\s-1THE SOFTWARE IS PROVIDED \*(L"AS IS\*(R", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.\s0
